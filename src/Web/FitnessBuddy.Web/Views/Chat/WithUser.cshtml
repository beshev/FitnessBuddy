@using FitnessBuddy.Web.Infrastructure.Extensions
@model UserChatViewModel

@{
    this.ViewData["Title"] = "Messages";
}

<div class="row">
    <vc:chat-conversation></vc:chat-conversation>
    <div class="col-md-8">
        @if (string.IsNullOrWhiteSpace(this.Model.ReceiverUsername))
        {
            <div class="text-center">
                <h5>Want to start a new conversation?</h5>
                <a asp-controller="Users" asp-action="All">
                    <h6>Find some buddy</h6>
                </a>
            </div>
        }
        else
        {
            <h3 class="text-center">@Model.ReceiverUsername</h3>
            <div id="messagesList" class="div-scroll">
                @foreach (var message in Model.Messages)
                {
                    if (message.AuthorUsername == this.Model.ReceiverUsername)
                    {
                        <div class="text-left">
                            <p>
                                <strong>@Model.ReceiverUsername</strong>
                                <span>@message.CreatedOn</span>
                            </p>
                            <p>
                                @if (message.IsDeleted)
                                {
                                    <span class="text-secondary rounded p-2">This message was deleted</span>
                                }
                                else
                                {
                                    <span class="bg-secondary text-white rounded p-2" id="message@(message.Id)">@this.Html.Raw(@message.SanitizedContent)</span>
                                }
                            </p>
                        </div>
                    }
                    else
                    {
                        <div class="text-right">
                            <p>
                                <strong>You</strong>
                                <span>
                                    @message.CreatedOn
                                    @if (message.IsDeleted == false)
                                    {
                                        <a href="javascript:void(0)" onclick="deleteMessage(this, @message.Id)">
                                            <i class="fa-solid fa-ban text-danger"></i>
                                        </a>
                                    }
                                </span>
                            </p>
                            <p>
                                @if (message.IsDeleted)
                                {
                                    <span class="text-secondary rounded p-2">This message was deleted</span>
                                }
                                else
                                {
                                    <span class="bg-info text-white rounded p-2" id="message@(message.Id)">@this.Html.Raw(@message.SanitizedContent)</span>
                                }
                            </p>
                        </div>
                    }
                }
            </div>
            <hr />
            <div class="text-center">
                <textarea id="messageInput" rows="5" cols="100"></textarea>
            </div>
            <button id="sendButton" class="btn btn-primary offset-5">Send message</button>
        }
    </div>
</div>


@section Scripts{
<script>
    $('#messagesList')[0].scrollTop = $('#messagesList')[0].scrollHeight;

    var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

      connection.on("NewMessage",
          function (message) {
                let chatInfo;
                  if(message.authorUsername.toLowerCase() == '@Model.ReceiverUsername'.toLowerCase()){
                    chatInfo = `<div class="text-left">
                            <p>
                                <strong>${message.authorUsername}</strong>
                                <span>${message.createdOn}</span>
                            </p>
                            <p>
                                <span class="bg-secondary text-white rounded p-2" id="message${message.id}">${message.content}</span>
                            </p>
                        </div>`
                  } else {
                     chatInfo = `<div class="text-right">
                            <p>
                                <strong>You</strong>
                                <span>
                                    ${message.createdOn}
                                    <a href="javascript:void(0)" onclick="deleteMessage(this, ${message.id})">
                                        <i class="fa-solid fa-ban text-danger"></i>
                                    </a>
                                </span>
                            </p>
                            <p>
                                <span class="bg-info text-white rounded p-2" id="message${message.id}">${message.content}</span>
                            </p>
                        </div>`
                  }


                $('#messagesList').append(chatInfo);
                $('#messagesList')[0].scrollTop = $('#messagesList')[0].scrollHeight;
          });

      connection.on("DeleteMessage",
          function (message){
              let $messageSpan = $(`#message${message.id}`)[0];

              $messageSpan.classList.remove('bg-info','bg-secondary','text-white');
              $messageSpan.classList.add('text-secondary');
              $messageSpan.innerHTML = 'This message was deleted';
          }
      )
      $("#sendButton").click(function() {
          var message = $.trim($('#messageInput').val());
            $('#messageInput').val('');
            connection.invoke("SendMessage", escapeHtml(message), '@Model.ReceiverId');
      });

      function deleteMessage(element, messageId) {
          connection.invoke('DeleteMessage', messageId);

          element.remove();
      }

      connection
     .start()
     .then(() => {
        connection.invoke('JoinGroup', '@Model.ReceiverId');
     })
     .catch(function (err) {
          return console.error(err.toString());
      });

       function escapeHtml(unsafe) {
        return unsafe
            .replace(':)', "🙂")
            .replace(':(', "🙁")
            .replace(';)', "😉")
            .replace(':*', "😘")
            .replace(/<3/g, "❤")
            .replace(/:D/g, "😀")
            .replace(/:P/g, "😜")
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }
</script>
}

