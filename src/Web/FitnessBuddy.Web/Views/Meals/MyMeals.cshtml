@model AllMealsViewModel

@{
    this.ViewData["Title"] = "All Meals";
}

@if (Model.Meals.Count() == 0)
{
    <partial name="_NoMealsPartial" />
}

@foreach (var meal in Model.Meals)
{
    <h1 class="text-center">
        @meal.Name
    </h1>
    <table class="table table-sm table-striped text-center table-bordered">
        <thead>
            <tr>
                <th scope="col">Current Protein / Target Protein</th>
                <th scope="col">Current Carbohydrates / Target Carbohydrates</th>
                <th scope="col">Current Fat / Target Fat</th>
                <th scope="col">Total calories</th>
                <th scope="col"></th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@meal.CurrentProtein.ToString("F2") / @meal.TargetProtein.ToString("F2")</td>
                <td>@meal.CurrentCarbohydrates.ToString("F2") / @meal.TargetCarbs.ToString("F2")</td>
                <td>@meal.CurrentFats.ToString("F2") / @meal.TargetFat.ToString("F2")</td>
                <td>@meal.TotalCalories.ToString("F2") kcal</td>
                <td></td>
                <td>
                    <a class="btn btn-danger" asp-action="Delete" asp-controller="Meals" asp-route-mealId="@meal.Id">
                        Delete
                    </a>
                </td>
            </tr>
            <tr>
                <th scope="row">Food name</th>
                <th scope="row">Protein</th>
                <th scope="row">Carbohydrates</th>
                <th scope="row">Fat</th>
                <th scope="row">Quantity</th>
                <th scope="row"></th>
            </tr>
            @foreach (var mealFood in meal.MealFoods)
            {
                <tr>
                    <td scope="row">@mealFood.FoodName</td>
                    <td scope="row">@mealFood.Protein.ToString("F2") gr.</td>
                    <td scope="row">@mealFood.Carbohydrates.ToString("F2") gr.</td>
                    <td scope="row">@mealFood.Fats.ToString("F2") gr.</td>
                    <td scope="row">@mealFood.QuantityInGrams.ToString("F2") gr.</td>
                    <td scope="row">
                        <a asp-action="RemoveFood" asp-controller="Meals" asp-route-mealFoodId="@mealFood.Id">
                            <strong>Remove</strong>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<div class="text-center">
    <a class="btn btn-outline-info" asp-area="" asp-controller="Foods" asp-action="All">Add food</a>
</div>
<div class="text-center" style="margin-top: 1%">
    <a class="btn btn-outline-primary" asp-area="" asp-controller="Meals" asp-action="Create">Create new meal</a>
</div>


<h5>
    Total protein: @Model.TotalProtein.ToString("F2") gr. / Targer Protein: @Model.UserNutrients.DailyProteinGoal.ToString("F2")
</h5>
<h5>
    Total carbs: @Model.TotalCarbohydrates.ToString("F2") gr. / Targer Carbohydrates: @Model.UserNutrients.DailyCarbohydratesGoal.ToString("F2")
</h5>
<h5>
    Total fats: @Model.TotalFats.ToString("F2") gr. / Targer Fats: @Model.UserNutrients.DailyFatGoal.ToString("F2")
</h5>
<h5>
    Total calories: @Model.TotalCalories.ToString("F2") kcal. / Targer Calories: @Model.UserNutrients.DailyCaloriesGoal.ToString("F2")
</h5>
<h5>
    Calories left to the goal: @((Model.UserNutrients.DailyCaloriesGoal - Model.TotalCalories).ToString("F2"))
</h5>
